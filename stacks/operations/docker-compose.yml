name: ops


########################### NETWORKS
networks:
#  default:
#    driver: bridge
#  socket_proxy:
#    name: socket_proxy
  t3_proxy:
     external: true
  operations:
    name: operations
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.84.0/24


services:

  oxidized:
    container_name: oxidized
    image: docker.io/oxidized/oxidized:latest
    restart: unless-stopped
    # user: 0:0
    networks:
      - t3_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "8888:8888"
    volumes:
      - /srv/appdata/oxidized/config:/home/oxidized/.config/oxidized
      - /srv/appdata/oxidized/ssh:/home/oxidized/.ssh
    environment:
      # Reload hosts list once per day
      CONFIG_RELOAD_INTERVAL: 86400
      # # Needed when you push to a remote git repository
      # OXIDIZED_SSH_PASSPHRASE: xxxxPassphasexxxx
    labels:
      - traefik.enable=true
      - traefik.http.routers.oxidixed.entrypoints=web,websecure
      - traefik.http.routers.oxidized.rule=Host(`oxidized.deercrest.info`)
      - traefik.http.routers.oxidized.middlewares=chain-authelia@file
      - traefik.http.routers.oxidized.tls=true
      - traefik.http.routers.oxidized.tls.certresolver=dns-cloudflare
      - traefik.http.routers.oxidized.service=oxidized
      - traefik.http.services.oxidized.loadbalancer.server.port=8888



  # WebVirtCloud - Web-based KVM Virtual Machine Management Interface
  # Provides a UI to manage, create, and access KVM VMs through your browser
  webvirtcloud:
    container_name: webvirtcloud
    image: forumi0721/alpine-webvirtcloud:latest
    restart: unless-stopped
    networks:
      - t3_proxy  # Connect to the same traefik network for reverse proxy
    security_opt:
      - no-new-privileges:true
    # The container uses different internal ports:
    # - 5000: Gunicorn/Django app (webvirtcloud)
    # - 5100: novncd service
    # - 5200: nginx frontend
    ports:
      - "8000:5200"  # Map to the nginx port instead of 80
      - "6080:5100"  # Map to the novncd port
    volumes:
      # Create static directory structure properly
      - /srv/appdata/webvirtcloud/data:/var/www/webvirtcloud
      - /srv/appdata/webvirtcloud/static:/static
      # Map libvirt socket from host to allow communication with local hypervisor
      - /var/run/libvirt/libvirt-sock:/var/run/libvirt/libvirt-sock
      - /var/run/libvirt/libvirt-sock-ro:/var/run/libvirt/libvirt-sock-ro
      # Mount certificates if needed
      - /etc/libvirt:/etc/libvirt:ro
      # Add user for nginx - needed to address the nginx user error
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      # Add a local nginx.conf to replace the container's version
      - /srv/appdata/webvirtcloud/nginx.conf:/nginx/nginx.conf:ro
    environment:
      # Basic configuration
      - TZ=Europe/Dublin
      - SUPERUSER_NAME=admin
      - SUPERUSER_PASSWORD=changeThisPassword
      - SUPERUSER_EMAIL=admin@example.com
      # Fix static directory issues by creating the directory in container
      - STATIC_ROOT=/static
      # Using nobody user for nginx instead of the non-existent nginx user
      - NGINX_USER=nobody
      # Debug mode for troubleshooting
      - DEBUG=True
    # Add custom init script to create required directories and fix permissions
    command: >
      sh -c "mkdir -p /static && 
             chmod 777 /static &&
             sed -i 's/user nginx/user nobody/g' /nginx/nginx.conf &&
             supervisord -c /etc/supervisor/supervisord.conf"
    labels:
      # Traefik integration labels
      - traefik.enable=true
      # Main web interface
      - traefik.http.routers.webvirtcloud.entrypoints=web,websecure
      - traefik.http.routers.webvirtcloud.rule=Host(`vms.deercrest.info`)
      - traefik.http.routers.webvirtcloud.middlewares=chain-authelia@file
      - traefik.http.routers.webvirtcloud.tls=true
      - traefik.http.routers.webvirtcloud.tls.certresolver=dns-cloudflare
      - traefik.http.services.webvirtcloud.loadbalancer.server.port=5200
      # noVNC console service
      - traefik.http.routers.webvirtcloud-novnc.entrypoints=websecure
      - traefik.http.routers.webvirtcloud-novnc.rule=Host(`vms.deercrest.info`) && PathPrefix(`/websockify`)
      - traefik.http.routers.webvirtcloud-novnc.service=webvirtcloud-novnc
      - traefik.http.routers.webvirtcloud-novnc.tls=true
      - traefik.http.services.webvirtcloud-novnc.loadbalancer.server.port=5100
